public class BarCode implements Comparable{
    // instance variables
    private String _zip;
    private int _checkDigit;
    private static String[] _bars = {"||:::",":::||","::|:|","::||:",":|::|",":|:|:",":||::","|:::|","|::|:","|:|::"};

    // constructors
    //precondtion: zip.length() = 5 and zip contains only digits.
    //postcondition: throws a runtime exception zip is not the correct length
    //               or zip contains a non digit
    //               _zip and _checkDigit are initialized.
    public BarCode(String zip){
	if (zip.length() != 5){
	    throw new RuntimeException();
	}
	try{
	    int num = Integer.parseInt(zip);
	}catch(NumberFormatException e){
	}
	_zip = zip + String.valueOf(_checkDigit);
	_checkDigit = checkSum();
    }
    
    // postcondition: Creates a copy of a bar code.
    public BarCode(BarCode x){
	}
    


    //post: computes and returns the check sum for _zip
    private int checkSum(){
	int ret = 0;
	for(int i = 0; i < _zip.length()-1; i++){
	    ret += Integer.parseInt(_zip.substring(i,i+1));
	}
	ret = ret %10;
	return ret;
    }
    
    //postcondition: format zip + check digit + barcode 
    //ex. "084518  |||:::|::|::|::|:|:|::::|||::|:|"      
    public String toString(){
	String bar = "";
	//int num = Integer.parseInt(_zip.substring(i,i+1));
	for (int i = 0; i < _zip.length()-1; i++){
	    bar += _bars[Integer.parseInt(String.valueOf(_zip.charAt(i)))];
	}//the substring idea on both checkSum() and toString() was introduced by Jackie Xu fom pd. 7
	//I had a code that used charAt(i) to find the num and then Character.getNumericValue which converts into a number to put in that array. This way was more creative and less time consuming 
	return _zip + _checkDigit + " |" + bar + " |";
    }


    public boolean equals(Object other){
	return other == this || other instanceof BarCode && _zip.equals(((BarCode)other)._zip);
    }
    //thank god we had code from class
    // postcondition: false if the object is not a BarCode, 
    // false if it is a non-matching barcode
    // true when they match.


    public int compareTo(Object other){
	return Integer.parseInt(_zip) - Integer.parseInt(((BarCode)other)._zip);
    }
    // postcondition: compares the zip + checkdigit 

    //test
    public static void main(String[]args){
        BarCode n = new BarCode("01234");
        System.out.println(n);
    }
}